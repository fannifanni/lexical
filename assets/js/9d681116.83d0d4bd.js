"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([[888],{876:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var n=a(2784);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),k=p(a),m=l,f=k["".concat(d,".").concat(m)]||k[m]||c[m]||i;return a?n.createElement(f,r(r({ref:t},s),{},{components:a})):n.createElement(f,r({ref:t},s))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},755:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(7896),l=(a(2784),a(876));const i={id:"lexical.RangeSelection",title:"Class: RangeSelection",sidebar_label:"RangeSelection",custom_edit_url:null},r=void 0,o={unversionedId:"api/classes/lexical.RangeSelection",id:"api/classes/lexical.RangeSelection",title:"Class: RangeSelection",description:"lexical.RangeSelection",source:"@site/docs/api/classes/lexical.RangeSelection.md",sourceDirName:"api/classes",slug:"/api/classes/lexical.RangeSelection",permalink:"/lexical/docs/api/classes/lexical.RangeSelection",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"lexical.RangeSelection",title:"Class: RangeSelection",sidebar_label:"RangeSelection",custom_edit_url:null},sidebar:"api",previous:{title:"Point",permalink:"/lexical/docs/api/classes/lexical.Point"},next:{title:"RootNode",permalink:"/lexical/docs/api/classes/lexical.RootNode"}},d={},p=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties",level:2},{value:"_cachedNodes",id:"_cachednodes",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"anchor",id:"anchor",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"dirty",id:"dirty",level:3},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"focus",id:"focus",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"format",id:"format",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"style",id:"style",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"Methods",id:"methods",level:2},{value:"applyDOMRange",id:"applydomrange",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"clone",id:"clone",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Implementation of",id:"implementation-of-1",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"deleteCharacter",id:"deletecharacter",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"deleteLine",id:"deleteline",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"deleteWord",id:"deleteword",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"extract",id:"extract",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Implementation of",id:"implementation-of-2",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"formatText",id:"formattext",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"getCharacterOffsets",id:"getcharacteroffsets",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"getNodes",id:"getnodes",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Implementation of",id:"implementation-of-3",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"getTextContent",id:"gettextcontent",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Implementation of",id:"implementation-of-4",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"hasFormat",id:"hasformat",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"insertLineBreak",id:"insertlinebreak",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"insertNodes",id:"insertnodes",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"insertParagraph",id:"insertparagraph",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"insertRawText",id:"insertrawtext",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Implementation of",id:"implementation-of-5",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"insertText",id:"inserttext",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"is",id:"is",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Implementation of",id:"implementation-of-6",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"isBackward",id:"isbackward",level:3},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"isCollapsed",id:"iscollapsed",level:3},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"modify",id:"modify",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"removeText",id:"removetext",level:3},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"setStyle",id:"setstyle",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"setTextNodeRange",id:"settextnoderange",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"toggleFormat",id:"toggleformat",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-30",level:4}],s={toc:p};function c(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/modules/lexical"},"lexical"),".RangeSelection"),(0,l.kt)("h2",{id:"implements"},"Implements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/lexical/docs/api/interfaces/lexical.BaseSelection"},(0,l.kt)("inlineCode",{parentName:"a"},"BaseSelection")))),(0,l.kt)("h2",{id:"constructors"},"Constructors"),(0,l.kt)("h3",{id:"constructor"},"constructor"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"new RangeSelection"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"anchor"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"focus"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"format"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"style"),")"),(0,l.kt)("h4",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"anchor")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"PointType"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"focus")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"PointType"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"format")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"style")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string"))))),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L672"},"lexical/src/LexicalSelection.ts:672")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"_cachednodes"},"_","cachedNodes"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"_","cachedNodes"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/classes/lexical.LexicalNode"},(0,l.kt)("inlineCode",{parentName:"a"},"LexicalNode")),"[]"),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L670"},"lexical/src/LexicalSelection.ts:670")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"anchor"},"anchor"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"anchor"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"PointType")),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L665"},"lexical/src/LexicalSelection.ts:665")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"dirty"},"dirty"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"dirty"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("h4",{id:"implementation-of"},"Implementation of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection"},"BaseSelection"),".",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection#dirty"},"dirty")),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L667"},"lexical/src/LexicalSelection.ts:667")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"focus"},"focus"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"focus"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"PointType")),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L666"},"lexical/src/LexicalSelection.ts:666")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"format"},"format"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"format"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L668"},"lexical/src/LexicalSelection.ts:668")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"style"},"style"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"style"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L669"},"lexical/src/LexicalSelection.ts:669")),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"applydomrange"},"applyDOMRange"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"applyDOMRange"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"range"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Attempts to map a DOM selection range onto this Lexical Selection,\nsetting the anchor, focus, and type accordingly"),(0,l.kt)("h4",{id:"parameters-1"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"range")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"StaticRange")),(0,l.kt)("td",{parentName:"tr",align:"left"},"a DOM Selection range conforming to the StaticRange interface.")))),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L878"},"lexical/src/LexicalSelection.ts:878")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"clone"},"clone"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"clone"),"(): ",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/classes/lexical.RangeSelection"},(0,l.kt)("inlineCode",{parentName:"a"},"RangeSelection"))),(0,l.kt)("p",null,"Creates a new RangeSelection, copying over all the property values from this one."),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/classes/lexical.RangeSelection"},(0,l.kt)("inlineCode",{parentName:"a"},"RangeSelection"))),(0,l.kt)("p",null,"a new RangeSelection with the same property values as this one."),(0,l.kt)("h4",{id:"implementation-of-1"},"Implementation of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection"},"BaseSelection"),".",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection#clone"},"clone")),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L914"},"lexical/src/LexicalSelection.ts:914")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"deletecharacter"},"deleteCharacter"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"deleteCharacter"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"isBackward"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Performs one logical character deletion operation on the EditorState based on the current Selection.\nHandles different node types."),(0,l.kt)("h4",{id:"parameters-2"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"isBackward")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},"whether or not the selection is backwards.")))),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L2185"},"lexical/src/LexicalSelection.ts:2185")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"deleteline"},"deleteLine"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"deleteLine"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"isBackward"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Performs one logical line deletion operation on the EditorState based on the current Selection.\nHandles different node types."),(0,l.kt)("h4",{id:"parameters-3"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"isBackward")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},"whether or not the selection is backwards.")))),(0,l.kt)("h4",{id:"returns-3"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L2305"},"lexical/src/LexicalSelection.ts:2305")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"deleteword"},"deleteWord"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"deleteWord"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"isBackward"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Performs one logical word deletion operation on the EditorState based on the current Selection.\nHandles different node types."),(0,l.kt)("h4",{id:"parameters-4"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"isBackward")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},"whether or not the selection is backwards.")))),(0,l.kt)("h4",{id:"returns-4"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L2328"},"lexical/src/LexicalSelection.ts:2328")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"extract"},"extract"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"extract"),"(): ",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/classes/lexical.LexicalNode"},(0,l.kt)("inlineCode",{parentName:"a"},"LexicalNode")),"[]"),(0,l.kt)("p",null,"Extracts the nodes in the Selection, splitting nodes where necessary\nto get offset-level precision."),(0,l.kt)("h4",{id:"returns-5"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/classes/lexical.LexicalNode"},(0,l.kt)("inlineCode",{parentName:"a"},"LexicalNode")),"[]"),(0,l.kt)("p",null,"The nodes in the Selection"),(0,l.kt)("h4",{id:"implementation-of-2"},"Implementation of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection"},"BaseSelection"),".",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection#extract"},"extract")),(0,l.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L1979"},"lexical/src/LexicalSelection.ts:1979")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"formattext"},"formatText"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"formatText"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"formatType"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Applies the provided format to the TextNodes in the Selection, splitting or\nmerging nodes as necessary."),(0,l.kt)("h4",{id:"parameters-5"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"formatType")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/lexical/docs/api/modules/lexical#textformattype"},(0,l.kt)("inlineCode",{parentName:"a"},"TextFormatType"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"the format type to apply to the nodes in the Selection.")))),(0,l.kt)("h4",{id:"returns-6"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L1319"},"lexical/src/LexicalSelection.ts:1319")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"getcharacteroffsets"},"getCharacterOffsets"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"getCharacterOffsets"),"(): ","[",(0,l.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"]"),(0,l.kt)("p",null,"Returns the character-based offsets of the Selection, accounting for non-text Points\nby using the children size or text content."),(0,l.kt)("h4",{id:"returns-7"},"Returns"),(0,l.kt)("p",null,"[",(0,l.kt)("inlineCode",{parentName:"p"},"number"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"]"),(0,l.kt)("p",null,"the character offsets for the Selection"),(0,l.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L1969"},"lexical/src/LexicalSelection.ts:1969")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"getnodes"},"getNodes"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"getNodes"),"(): ",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/classes/lexical.LexicalNode"},(0,l.kt)("inlineCode",{parentName:"a"},"LexicalNode")),"[]"),(0,l.kt)("p",null,"Gets all the nodes in the Selection. Uses caching to make it generally suitable\nfor use in hot paths."),(0,l.kt)("h4",{id:"returns-8"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/classes/lexical.LexicalNode"},(0,l.kt)("inlineCode",{parentName:"a"},"LexicalNode")),"[]"),(0,l.kt)("p",null,"an Array containing all the nodes in the Selection"),(0,l.kt)("h4",{id:"implementation-of-3"},"Implementation of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection"},"BaseSelection"),".",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection#getnodes"},"getNodes")),(0,l.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L733"},"lexical/src/LexicalSelection.ts:733")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"gettextcontent"},"getTextContent"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"getTextContent"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"Gets the (plain) text content of all the nodes in the selection."),(0,l.kt)("h4",{id:"returns-9"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"a string representing the text content of all the nodes in the Selection"),(0,l.kt)("h4",{id:"implementation-of-4"},"Implementation of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection"},"BaseSelection"),".",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection#gettextcontent"},"getTextContent")),(0,l.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L810"},"lexical/src/LexicalSelection.ts:810")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"hasformat"},"hasFormat"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"hasFormat"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"type"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Returns whether the provided TextFormatType is present on the Selection. This will be true if any node in the Selection\nhas the specified format."),(0,l.kt)("h4",{id:"parameters-6"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/lexical/docs/api/modules/lexical#textformattype"},(0,l.kt)("inlineCode",{parentName:"a"},"TextFormatType"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"the TextFormatType to check for.")))),(0,l.kt)("h4",{id:"returns-10"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"true if the provided format is currently toggled on on the Selection, false otherwise."),(0,l.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L953"},"lexical/src/LexicalSelection.ts:953")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"insertlinebreak"},"insertLineBreak"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"insertLineBreak"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"selectStart?"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Inserts a logical linebreak, which may be a new LineBreakNode or a new ParagraphNode, into the EditorState at the\ncurrent Selection."),(0,l.kt)("h4",{id:"parameters-7"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"selectStart?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},"whether or not to select the start of the insertion range after the operation completes.")))),(0,l.kt)("h4",{id:"returns-11"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L1945"},"lexical/src/LexicalSelection.ts:1945")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"insertnodes"},"insertNodes"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"insertNodes"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"nodes"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"selectStart?"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,'Attempts to "intelligently" insert an arbitrary list of Lexical nodes into the EditorState at the\ncurrent Selection according to a set of heuristics that determine how surrounding nodes\nshould be changed, replaced, or moved to accomodate the incoming ones.'),(0,l.kt)("h4",{id:"parameters-8"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"nodes")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/lexical/docs/api/classes/lexical.LexicalNode"},(0,l.kt)("inlineCode",{parentName:"a"},"LexicalNode")),"[]"),(0,l.kt)("td",{parentName:"tr",align:"left"},"the nodes to insert")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"selectStart?")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},"whether or not to select the start after the insertion.")))),(0,l.kt)("h4",{id:"returns-12"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"true if the nodes were inserted successfully, false otherwise."),(0,l.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L1452"},"lexical/src/LexicalSelection.ts:1452")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"insertparagraph"},"insertParagraph"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"insertParagraph"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Inserts a new ParagraphNode into the EditorState at the current Selection"),(0,l.kt)("h4",{id:"returns-13"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L1829"},"lexical/src/LexicalSelection.ts:1829")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"insertrawtext"},"insertRawText"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"insertRawText"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"text"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Attempts to insert the provided text into the EditorState at the current Selection.\nconverts tabs, newlines, and carriage returns into LexicalNodes."),(0,l.kt)("h4",{id:"parameters-9"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"text")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"the text to insert into the Selection")))),(0,l.kt)("h4",{id:"returns-14"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"implementation-of-5"},"Implementation of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection"},"BaseSelection"),".",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection#insertrawtext"},"insertRawText")),(0,l.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L964"},"lexical/src/LexicalSelection.ts:964")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"inserttext"},"insertText"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"insertText"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"text"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Attempts to insert the provided text into the EditorState at the current Selection as a new\nLexical TextNode, according to a series of insertion heuristics based on the selection type and position."),(0,l.kt)("h4",{id:"parameters-10"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"text")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"the text to insert into the Selection")))),(0,l.kt)("h4",{id:"returns-15"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L987"},"lexical/src/LexicalSelection.ts:987")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"is"},"is"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"is"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"selection"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Used to check if the provided selections is equal to this one by value,\ninluding anchor, focus, format, and style properties."),(0,l.kt)("h4",{id:"parameters-11"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"selection")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/lexical/docs/api/classes/lexical.RangeSelection"},(0,l.kt)("inlineCode",{parentName:"a"},"RangeSelection"))," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/lexical/docs/api/classes/lexical.NodeSelection"},(0,l.kt)("inlineCode",{parentName:"a"},"NodeSelection"))," ","|"," ",(0,l.kt)("a",{parentName:"td",href:"/lexical/docs/api/classes/lexical.GridSelection"},(0,l.kt)("inlineCode",{parentName:"a"},"GridSelection"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"the Selection to compare this one to.")))),(0,l.kt)("h4",{id:"returns-16"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"true if the Selections are equal, false otherwise."),(0,l.kt)("h4",{id:"implementation-of-6"},"Implementation of"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection"},"BaseSelection"),".",(0,l.kt)("a",{parentName:"p",href:"/lexical/docs/api/interfaces/lexical.BaseSelection#is"},"is")),(0,l.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L694"},"lexical/src/LexicalSelection.ts:694")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isbackward"},"isBackward"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"isBackward"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,'Returns whether the Selection is "backwards", meaning the focus\nlogically precedes the anchor in the EditorState.'),(0,l.kt)("h4",{id:"returns-17"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"true if the Selection is backwards, false otherwise."),(0,l.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L713"},"lexical/src/LexicalSelection.ts:713")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"iscollapsed"},"isCollapsed"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"isCollapsed"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,'Returns whether the Selection is "collapsed", meaning the anchor and focus are\nthe same node and have the same offset.'),(0,l.kt)("h4",{id:"returns-18"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"true if the Selection is collapsed, false otherwise."),(0,l.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L723"},"lexical/src/LexicalSelection.ts:723")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"modify"},"modify"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"modify"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"alter"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"isBackward"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"granularity"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,'Modifies the Selection according to the parameters and a set of heuristics that account for\nvarious node types. Can be used to safely move or extend selection by one logical "unit" without\ndealing explicitly with all the possible node types.'),(0,l.kt)("h4",{id:"parameters-12"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"alter")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},'"move"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"extend"')),(0,l.kt)("td",{parentName:"tr",align:"left"},"the type of modification to perform")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"isBackward")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:"left"},"whether or not selection is backwards")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"granularity")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},'"character"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"word"')," ","|"," ",(0,l.kt)("inlineCode",{parentName:"td"},'"lineboundary"')),(0,l.kt)("td",{parentName:"tr",align:"left"},"the granularity at which to apply the modification")))),(0,l.kt)("h4",{id:"returns-19"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L2037"},"lexical/src/LexicalSelection.ts:2037")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"removetext"},"removeText"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"removeText"),"(): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Removes the text in the Selection, adjusting the EditorState accordingly."),(0,l.kt)("h4",{id:"returns-20"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L1309"},"lexical/src/LexicalSelection.ts:1309")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"setstyle"},"setStyle"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"setStyle"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"style"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Sets the value of the style property on the Selection"),(0,l.kt)("h4",{id:"parameters-13"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"style")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:"left"},"the style to set at the value of the style property.")))),(0,l.kt)("h4",{id:"returns-21"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L941"},"lexical/src/LexicalSelection.ts:941")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"settextnoderange"},"setTextNodeRange"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"setTextNodeRange"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"anchorNode"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"anchorOffset"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"focusNode"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"focusOffset"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,'Sets this Selection to be of type "text" at the provided anchor and focus values.'),(0,l.kt)("h4",{id:"parameters-14"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"anchorNode")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/lexical/docs/api/classes/lexical.TextNode"},(0,l.kt)("inlineCode",{parentName:"a"},"TextNode"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"the anchor node to set on the Selection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"anchorOffset")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"the offset to set on the Selection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"focusNode")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/lexical/docs/api/classes/lexical.TextNode"},(0,l.kt)("inlineCode",{parentName:"a"},"TextNode"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"the focus node to set on the Selection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"focusOffset")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:"left"},"the focus offset to set on the Selection")))),(0,l.kt)("h4",{id:"returns-22"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L793"},"lexical/src/LexicalSelection.ts:793")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"toggleformat"},"toggleFormat"),(0,l.kt)("p",null,"\u25b8 ",(0,l.kt)("strong",{parentName:"p"},"toggleFormat"),"(",(0,l.kt)("inlineCode",{parentName:"p"},"format"),"): ",(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("p",null,"Toggles the provided format on all the TextNodes in the Selection."),(0,l.kt)("h4",{id:"parameters-15"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,l.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("inlineCode",{parentName:"td"},"format")),(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("a",{parentName:"td",href:"/lexical/docs/api/modules/lexical#textformattype"},(0,l.kt)("inlineCode",{parentName:"a"},"TextFormatType"))),(0,l.kt)("td",{parentName:"tr",align:"left"},"a string TextFormatType to toggle on the TextNodes in the selection")))),(0,l.kt)("h4",{id:"returns-23"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"void")),(0,l.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/fannifanni/lexical/blob/61208ee/packages/lexical/src/LexicalSelection.ts#L931"},"lexical/src/LexicalSelection.ts:931")))}c.isMDXComponent=!0}}]);