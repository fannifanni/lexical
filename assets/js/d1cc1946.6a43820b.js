"use strict";(self.webpackChunk_lexical_website=self.webpackChunk_lexical_website||[]).push([[7815],{876:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=o,g=m["".concat(c,".").concat(u)]||m[u]||p[u]||i;return n?r.createElement(g,a(a({ref:t},d),{},{components:n})):r.createElement(g,a({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3273:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7896),o=(n(2784),n(876));const i={sidebar_position:3},a="Theming",l={unversionedId:"getting-started/theming",id:"getting-started/theming",title:"Theming",description:"Lexical tries to make theming straight-forward, by providing a way of passing a customizable theming object that maps CSS class names to the editor on creation. Here's an example of a plain-text theme:",source:"@site/docs/getting-started/theming.md",sourceDirName:"getting-started",slug:"/getting-started/theming",permalink:"/lexical/docs/getting-started/theming",draft:!1,editUrl:"https://github.com/fannifanni/lexical/tree/main/packages/lexical-website/docs/getting-started/theming.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docs",previous:{title:"Getting Started with React",permalink:"/lexical/docs/getting-started/react"},next:{title:"Supported Browsers",permalink:"/lexical/docs/getting-started/supported-browsers"}},c={},s=[],d={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"theming"},"Theming"),(0,o.kt)("p",null,"Lexical tries to make theming straight-forward, by providing a way of passing a customizable theming object that maps CSS class names to the editor on creation. Here's an example of a plain-text theme:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const exampleTheme = {\n  ltr: 'ltr',\n  rtl: 'rtl',\n  paragraph: 'editor-paragraph',\n};\n")),(0,o.kt)("p",null,"In your CSS, you can then add something like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},".ltr {\n  text-align: left;\n}\n\n.rtl {\n  text-align: right;\n}\n\n.editor-placeholder {\n  color: #999;\n  overflow: hidden;\n  position: absolute;\n  top: 15px;\n  left: 15px;\n  user-select: none;\n  pointer-events: none;\n}\n\n.editor-paragraph {\n  margin: 0 0 15px 0;\n  position: relative;\n}\n")),(0,o.kt)("p",null,"To apply it, you need to pass it to your editor instance. If you're using a framework like React, this is done by\npassing it as a property of the ",(0,o.kt)("inlineCode",{parentName:"p"},"initialConfig")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"<LexicalComposer>"),", like shown:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import {LexicalComposer} from '@lexical/react/LexicalComposer';\nimport {PlainTextPlugin} from '@lexical/react/LexicalPlainTextPlugin';\nimport {ContentEditable} from '@lexical/react/LexicalContentEditable';\nimport {exampleTheme} from './exampleTheme';\nimport LexicalErrorBoundary from '@lexical/react/LexicalErrorBoundary';\n\nconst initialConfig = {namespace: 'MyEditor', theme: exampleTheme};\n\nexport default function Editor() {\n  return (\n    <LexicalComposer initialConfig={initialConfig}>\n      <PlainTextPlugin\n        contentEditable={<ContentEditable />}\n        placeholder={<div className=\"editor-placeholder\">Enter some text...</div>}\n        ErrorBoundary={LexicalErrorBoundary}\n      />\n    </LexicalComposer>\n  );\n}\n")),(0,o.kt)("p",null,"If you are using vanilla JS, you can pass it to the ",(0,o.kt)("inlineCode",{parentName:"p"},"createEditor()")," function, like shown:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {createEditor} from 'lexical';\n\nconst editor = createEditor({\n  namespace: 'MyEditor',\n  theme: exampleTheme,\n});\n")),(0,o.kt)("p",null,"Many of the Lexical's core nodes also accept theming properties. Here's a more comprehensive theming object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const exampleTheme = {\n  ltr: 'ltr',\n  rtl: 'rtl',\n  paragraph: 'editor-paragraph',\n  quote: 'editor-quote',\n  heading: {\n    h1: 'editor-heading-h1',\n    h2: 'editor-heading-h2',\n    h3: 'editor-heading-h3',\n    h4: 'editor-heading-h4',\n    h5: 'editor-heading-h5',\n    h6: 'editor-heading-h6',\n  },\n  list: {\n    nested: {\n      listitem: 'editor-nested-listitem',\n    },\n    ol: 'editor-list-ol',\n    ul: 'editor-list-ul',\n    listitem: 'editor-listItem',\n    listitemChecked: 'editor-listItemChecked',\n    listitemUnchecked: 'editor-listItemUnchecked',\n  },\n  hashtag: 'editor-hashtag',\n  image: 'editor-image',\n  link: 'editor-link',\n  text: {\n    bold: 'editor-textBold',\n    code: 'editor-textCode',\n    italic: 'editor-textItalic',\n    strikethrough: 'editor-textStrikethrough',\n    subscript: 'editor-textSubscript',\n    superscript: 'editor-textSuperscript',\n    underline: 'editor-textUnderline',\n    underlineStrikethrough: 'editor-textUnderlineStrikethrough',\n  },\n  code: 'editor-code',\n  codeHighlight: {\n    atrule: 'editor-tokenAttr',\n    attr: 'editor-tokenAttr',\n    boolean: 'editor-tokenProperty',\n    builtin: 'editor-tokenSelector',\n    cdata: 'editor-tokenComment',\n    char: 'editor-tokenSelector',\n    class: 'editor-tokenFunction',\n    'class-name': 'editor-tokenFunction',\n    comment: 'editor-tokenComment',\n    constant: 'editor-tokenProperty',\n    deleted: 'editor-tokenProperty',\n    doctype: 'editor-tokenComment',\n    entity: 'editor-tokenOperator',\n    function: 'editor-tokenFunction',\n    important: 'editor-tokenVariable',\n    inserted: 'editor-tokenSelector',\n    keyword: 'editor-tokenAttr',\n    namespace: 'editor-tokenVariable',\n    number: 'editor-tokenProperty',\n    operator: 'editor-tokenOperator',\n    prolog: 'editor-tokenComment',\n    property: 'editor-tokenProperty',\n    punctuation: 'editor-tokenPunctuation',\n    regex: 'editor-tokenVariable',\n    selector: 'editor-tokenSelector',\n    string: 'editor-tokenSelector',\n    symbol: 'editor-tokenProperty',\n    tag: 'editor-tokenProperty',\n    url: 'editor-tokenOperator',\n    variable: 'editor-tokenVariable',\n  },\n};\n")))}p.isMDXComponent=!0}}]);